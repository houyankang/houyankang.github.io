<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Spring Cloud Alibaba</title>
    <url>/2020/08/11/Spring%20Cloud%20Alibaba/</url>
    <content><![CDATA[<h1 id="Spring-Cloud-Alibaba"><a href="#Spring-Cloud-Alibaba" class="headerlink" title="Spring Cloud Alibaba"></a>Spring Cloud Alibaba</h1><a id="more"></a>

<h3 id="一、Spring-Cloud-Alibaba"><a href="#一、Spring-Cloud-Alibaba" class="headerlink" title="一、Spring Cloud Alibaba"></a>一、Spring Cloud Alibaba</h3><h4 id="1-1-微服务概述"><a href="#1-1-微服务概述" class="headerlink" title="1.1 微服务概述"></a>1.1 微服务概述</h4><p><img src="https://yankang.oss-cn-beijing.aliyuncs.com/imgs/image-20200731143046380.png" alt="image-20200731143046380"></p>
<blockquote>
<p>一个软件应用，往往会将应用所有功能都开发和打包在一起，那时候的一个B/S应用架构往往是这样的：<img src="https://yankang.oss-cn-beijing.aliyuncs.com/imgs/image-20200731143208612.png" alt="image-20200731143208612"></p>
</blockquote>
<blockquote>
<p>单体项目的缺陷：<br>代码臃肿，应用启动时间长；（代码超过1G的项目都有！）<br>回归测试周期长，修复一个小小bug可能都需要对所有关键业务进行回归测试。<br>应用容错性差，某个小小功能的程序错误可能导致整个系统宕机；<br>伸缩困难，单体应用扩展性能时只能整个应用进行扩展，造成计算资源浪费。<br>开发协作困难，一个大型应用系统，可能几十个甚至上百个开发人员，大家都在维护一套代码的话，代码<br>merge复杂度急剧增加。</p>
</blockquote>
<blockquote>
<p>SOA（Service-Oriented Architecture）-面向服务的体系架构</p>
</blockquote>
<blockquote>
<p>微服务架构（Microservice Architecture）是一种架构概念，旨在通过将功能分解到各个离散的服务中以实现对<br>解决方案的解耦。你可以将其看作是在架构层次而非获取服务的<br>类上应用很多SOLID原则。微服务架构是个很有趣的概念，它的主要作用是将功能分解到离散的各个服务当<br>中，从而降低系统的耦合性，并提供更加灵活的服务支持。</p>
</blockquote>
<blockquote>
<p><strong>概念</strong>：把一个大型的单个应用程序和服务拆分为数个甚至数十个的支持微服务，它可扩展单个组件而不是整<br>个的应用程序堆栈，从而满足服务等级协议。<br><strong>定义</strong>：围绕业务领域组件来创建应用，这些应用可独立地进行开发、管理和迭代。在分散的组件中使用云架<br>构和平台式部署、管理和服务功能，使产品交付变得更加简单。<br>本质：用一些功能比较明确、业务比较精练的服务去解决更大、更实际的问题。</p>
</blockquote>
<p><img src="https://yankang.oss-cn-beijing.aliyuncs.com/imgs/image-20200731143427205.png" alt="image-20200731143427205"></p>
<blockquote>
<p>微服务的应用场景：<br>◆ 大型复杂的系统 例如大型电商系统<br>◆ 高并发系统 例如大型门户网站,商品秒杀系统<br>◆ 需求不明确,且变更很快的系统 例如创业公司业务系统</p>
</blockquote>
<h4 id="1-2-主流微服务技术"><a href="#1-2-主流微服务技术" class="headerlink" title="1.2 主流微服务技术"></a>1.2 主流微服务技术</h4><blockquote>
<p>1.Dubbo/DubboX<br>Dubbo:<a href="http://dubbo.apache.org/zh-cn/">http://dubbo.apache.org/zh-cn/</a><br>DubboX:<a href="https://github.com/dangdangdotcom/dubbox">https://github.com/dangdangdotcom/dubbox</a><br>2.gRPC<br><a href="https://grpc.io/docs/what-is-grpc/core-concepts/#service-definition">https://grpc.io/docs/what-is-grpc/core-concepts/#service-definition</a><br>3.Spring Cloud Netflex<br><a href="https://spring.io/projects/spring-cloud">https://spring.io/projects/spring-cloud</a><br>4.Spring Cloud Alibaba<br><a href="https://spring.io/projects/spring-cloud-alibaba">https://spring.io/projects/spring-cloud-alibaba</a> 主流<br>5.Servicecomb<br><a href="http://servicecomb.apache.org/">http://servicecomb.apache.org/</a></p>
<p>6.Istio<br>Istio是什么：Istio是Google/IBM/Ly?联合开发的开源项目，2017年5月发布第一个release 0.1.0<br><a href="https://istio.io/">https://istio.io/</a></p>
</blockquote>
<h4 id="1-3-微服务十二要素"><a href="#1-3-微服务十二要素" class="headerlink" title="1.3 微服务十二要素"></a>1.3 微服务十二要素</h4><blockquote>
<p>12factor：<a href="https://12factor.net/">https://12factor.net/</a></p>
</blockquote>
<blockquote>
<p><strong>原则1：一份基准代码，多份部署</strong></p>
<p><strong>原则2：显式声明依赖关系</strong></p>
<p><strong>原则3：在环境中存储配置</strong></p>
<p><strong>原则4：把后端服务当作附加资源</strong></p>
<p><strong>原则5：严格分离构建、发布和运行</strong></p>
<p><strong>原则6：以一个或多个无状态的进程运行应用</strong></p>
<p><strong>原则7：通过端口绑定提供服务</strong></p>
<p><strong>原则8：通过进程模型进行扩展</strong></p>
<p><strong>原则9：快速启动和优雅终止可最大化健壮性</strong></p>
<p><strong>原则10：开发环境与线上环境等价</strong></p>
<p><strong>原则11：把日志当作事件流</strong></p>
<p><strong>原则12：后台管理任务当作一次性进程运行</strong></p>
</blockquote>
<h4 id="1-4-Spring-Cloud-Alibaba"><a href="#1-4-Spring-Cloud-Alibaba" class="headerlink" title="1.4 Spring Cloud Alibaba"></a>1.4 Spring Cloud Alibaba</h4><blockquote>
<p>SpringCloud Alibaba是阿里巴巴公司基于Spring Cloud所开发的一套微服务框架集<br>Spring Cloud Alibaba 致力于提供微服务应用服务开发的一站式解决方案。项目包含开发微服务应用服务的必<br>需组件，方便开发者通过 Spring Cloud 编程模型轻松使用这些组件来开发微服务应用服务。</p>
</blockquote>
<h4 id="1-5-核心组件"><a href="#1-5-核心组件" class="headerlink" title="1.5 核心组件"></a>1.5 核心组件</h4><p><strong>1.服务发现和配置中心 Nacos</strong></p>
<blockquote>
<ul>
<li>服务发现原理剖析</li>
<li>Nacos Server/Clinet</li>
<li>高可用Nacos搭建</li>
</ul>
</blockquote>
<p><strong>2.负载均衡Ribbon</strong></p>
<blockquote>
<ul>
<li>负载均衡常见模式</li>
<li><code>RestTemplate</code>整合Ribbon</li>
</ul>
</blockquote>
<p><strong>3.声明式HTTP客户端-Feign</strong></p>
<blockquote>
<ul>
<li>如何使用Fegin</li>
<li>Fegin配置自定义</li>
</ul>
</blockquote>
<p><strong>4.服务容错Sentinel</strong></p>
<blockquote>
<ul>
<li>服务容错原理</li>
<li>Sentinel</li>
<li>Sentinel Dashboard</li>
<li>Sentinel核心原理分析</li>
</ul>
</blockquote>
<p><strong>5.消息驱动RocketMQ</strong></p>
<blockquote>
<ul>
<li>SpringCloud Stream</li>
<li>实现异步消息推送与消费</li>
</ul>
</blockquote>
<p><strong>6.API网关GateWay</strong></p>
<blockquote>
<ul>
<li>整合GateWay</li>
<li>三个核心</li>
<li>聚合微服务请求</li>
</ul>
</blockquote>
<p>**</p>
]]></content>
  </entry>
  <entry>
    <title>OSS图片上传+Feign</title>
    <url>/2020/08/13/OSS%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0/</url>
    <content><![CDATA[<h1 id="OSS图片上传-Feign"><a href="#OSS图片上传-Feign" class="headerlink" title="OSS图片上传+Feign"></a>OSS图片上传+Feign</h1><a id="more"></a>

<h3 id="1-导入依赖"><a href="#1-导入依赖" class="headerlink" title="1.导入依赖"></a>1.导入依赖</h3><blockquote>
<p>这里需要阿里云的依赖、图片上传的依赖、openfeign的依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.22<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>


</blockquote>
<h3 id="2-配置OSS"><a href="#2-配置OSS" class="headerlink" title="2.配置OSS"></a>2.配置OSS</h3><blockquote>
<p>在阿里云上申请<code>accessKeyId</code>和<code>accessKeySecret</code></p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OssCore</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Endpoint以杭州为例，其它Region请按实际情况填写。</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String endpoint = <span class="string">&quot;https://oss-cn-beijing.aliyuncs.com&quot;</span>;</span><br><span class="line">    <span class="comment">// 阿里云主账号AccessKey拥有所有API的访问权限，风险很高。</span></span><br><span class="line">    <span class="comment">// 强烈建议您创建并使用RAM账号进行API访问或日常运维，请登录RAM控制台创建RAM账号。</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String accessKeyId = <span class="string">&quot;申请的accessKeyId&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String accessKeySecret = <span class="string">&quot;申请的accessKeySecret&quot;</span>;</span><br><span class="line">    <span class="comment">// 创建OSSClient实例。</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> OSS ossClient;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">       ossClient= <span class="keyword">new</span> OSSClientBuilder().build(endpoint, accessKeyId, accessKeySecret);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//创建存储空间</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">createBucket</span><span class="params">(String bname)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 创建CreateBucketRequest对象。</span></span><br><span class="line">        CreateBucketRequest createBucketRequest = <span class="keyword">new</span> CreateBucketRequest(bname);</span><br><span class="line">        <span class="comment">//创建存储空间</span></span><br><span class="line">        ossClient.createBucket(createBucketRequest);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//列出存储空间</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;Bucket&gt; <span class="title">listBucket</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ossClient.listBuckets();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//上传 --字符串</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">sendStr</span><span class="params">(String bname,String objname,String msg)</span></span>&#123;</span><br><span class="line">        <span class="comment">//实现上传</span></span><br><span class="line">        ossClient.putObject(bname,objname,<span class="keyword">new</span> ByteArrayInputStream(msg.getBytes()));</span><br><span class="line">        <span class="comment">//获取访问路径</span></span><br><span class="line">        <span class="keyword">return</span> ossClient.generatePresignedUrl(bname,objname, DateUtil.comDate(Calendar.YEAR,<span class="number">1</span>)).toString();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//上传 --字节</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">sendResouce</span><span class="params">(String bname,String objname,<span class="keyword">byte</span>[] data)</span></span>&#123;</span><br><span class="line">        ossClient.putObject(bname,objname,<span class="keyword">new</span> ByteArrayInputStream(data));</span><br><span class="line">        <span class="comment">//获取访问路径</span></span><br><span class="line">        <span class="keyword">return</span> ossClient.generatePresignedUrl(bname,objname, DateUtil.comDate(Calendar.YEAR,<span class="number">1</span>)).toString();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//上传 --</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">sendResouce</span><span class="params">(String bname, File file)</span></span>&#123;</span><br><span class="line">        ossClient.putObject(bname,file.getName(),file);</span><br><span class="line">        <span class="comment">//获取访问路径</span></span><br><span class="line">        <span class="keyword">return</span> ossClient.generatePresignedUrl(bname,file.getName(), DateUtil.comDate(Calendar.YEAR,<span class="number">1</span>)).toString();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">createURL</span><span class="params">(String bname,String objname,<span class="keyword">int</span> days)</span></span>&#123;</span><br><span class="line">        <span class="comment">//获取访问路径</span></span><br><span class="line">        <span class="keyword">return</span> ossClient.generatePresignedUrl(bname,objname, DateUtil.comDate(Calendar.DAY_OF_MONTH,days)).toString();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//删除</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">delResource</span><span class="params">(String bname,String objname)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            ossClient.deleteObject(bname, objname);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//列举文件</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;String&gt; <span class="title">listResource</span><span class="params">(String bname)</span></span>&#123;</span><br><span class="line">        List&lt;String&gt; files=<span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        ObjectListing listing=  ossClient.listObjects(bname);</span><br><span class="line">        <span class="keyword">for</span> (OSSObjectSummary objectSummary : listing.getObjectSummaries()) &#123;</span><br><span class="line">           files.add(objectSummary.getKey());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> files;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="3-创建OSS存储空间"><a href="#3-创建OSS存储空间" class="headerlink" title="3.创建OSS存储空间"></a>3.创建OSS存储空间</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Oss_Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        OssCore.createBucket(<span class="string">&quot;yingy&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-提供者服务"><a href="#4-提供者服务" class="headerlink" title="4.提供者服务"></a>4.提供者服务</h3><ul>
<li>配置启动类</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span> <span class="comment">//发布服务</span></span><br><span class="line"><span class="meta">@EnableFeignClients(&quot;com.demo.yingyan&quot;)</span> <span class="comment">//开启feign监听</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">YingyanUploadApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(YingyanUploadApplication.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>Controller</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ImgUploadController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ImgUploadService service;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;img/oss/upload.do&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">upload</span><span class="params">(<span class="meta">@RequestPart</span> MultipartFile file)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> service.upload(file);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>Service</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ImgUploadService</span> </span>&#123;</span><br><span class="line">    <span class="function">R <span class="title">upload</span><span class="params">(MultipartFile file)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<ul>
<li>图片重命名，防止重名</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileUtil</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">rename</span><span class="params">(String fn)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(StringUtil.isnoEmpty(fn))&#123;</span><br><span class="line">            <span class="keyword">if</span>(fn.length()&gt;<span class="number">30</span>)&#123;</span><br><span class="line">                fn=fn.substring(fn.length()-<span class="number">30</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            fn=System.currentTimeMillis()+<span class="string">&quot;_&quot;</span>+<span class="keyword">new</span> Random().nextInt(<span class="number">1000</span>)+<span class="string">&quot;_&quot;</span>+fn;</span><br><span class="line">            <span class="keyword">return</span> fn;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>




<ul>
<li>ServiceImpl</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ImgUploadServiceImpl</span> <span class="keyword">implements</span> <span class="title">ImgUploadService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">upload</span><span class="params">(MultipartFile file)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!file.isEmpty()) &#123;</span><br><span class="line">            <span class="comment">//判断文件格式</span></span><br><span class="line">            String fName = file.getOriginalFilename();</span><br><span class="line">            System.out.println(<span class="string">&quot;图片上传服务查看上传文件名：&quot;</span>+fName);</span><br><span class="line">            <span class="comment">//限制文件上传的格式为.jpg和.png</span></span><br><span class="line">            <span class="keyword">if</span> (fName.endsWith(<span class="string">&quot;.jpg&quot;</span>) || fName.endsWith(<span class="string">&quot;.png&quot;</span>)) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="comment">//获取上传的内容</span></span><br><span class="line">                    <span class="keyword">byte</span>[] data = file.getBytes();</span><br><span class="line">                    <span class="comment">//调用OSS进行图片内容审核</span></span><br><span class="line">                    <span class="keyword">if</span> (CensorUtil.checkImg(data)) &#123;</span><br><span class="line">                        <span class="comment">//上传的逻辑</span></span><br><span class="line">                        <span class="comment">//重命名、限制长度</span></span><br><span class="line">                        String fn = FileUtil.rename(file.getOriginalFilename());</span><br><span class="line">                        <span class="comment">//oss返回存储地址链接</span></span><br><span class="line">                        String url = OssCore.sendResouce(SystemConstant.OSS_BUCKET, fn,</span><br><span class="line">                                file.getBytes());</span><br><span class="line">                        <span class="keyword">if</span> (StringUtil.isnoEmpty(url)) &#123;</span><br><span class="line">                            System.out.println(<span class="string">&quot;图片返回连接：&quot;</span> + url);</span><br><span class="line">                            <span class="keyword">return</span> R.ok(<span class="string">&quot;上传成功&quot;</span>, url);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">return</span> R.fail(<span class="string">&quot;图片不合规，请重新上传&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> R.fail(<span class="string">&quot;图片格式不正确，请重新上传&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> R.fail(<span class="string">&quot;oss上传失败，请检查上传的内容&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>限制上传文件大小</li>
</ul>
<blockquote>
<p><a href="">注意：</a>在SpingBoot中，因为自带的tomcat最多支持上传文件为10M，当超过这个大小时，在请求到达接口之前就会报错。</p>
<p>在application.yml中添加以下信息</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">spring:</span><br><span class="line">servlet:</span><br><span class="line"> multipart:</span><br><span class="line">   max-file-size: 10MB #设置单个上传文件的大小</span><br><span class="line">   max-request-size: 50MB #设置请求上传的总大小</span><br></pre></td></tr></table></figure>


</blockquote>
<h3 id="5-消费者服务"><a href="#5-消费者服务" class="headerlink" title="5.消费者服务"></a>5.消费者服务</h3><ul>
<li>启动类</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@EnableFeignClients(&quot;com.demo.yingyan&quot;)</span></span><br><span class="line"> <span class="comment">//远程服务调用</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">YingyanApiApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(YingyanApiApplication.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>设置跨域（随手加的）</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@WebFilter(&quot;/*&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CROSFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        HttpServletResponse response=(HttpServletResponse)servletResponse;</span><br><span class="line">        response.setHeader(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>,<span class="string">&quot;*&quot;</span>); <span class="comment">//允许跨域</span></span><br><span class="line">        response.setHeader(<span class="string">&quot;Access-Control-Allow-Credentials&quot;</span>,<span class="string">&quot;true&quot;</span>); <span class="comment">//允许跨域</span></span><br><span class="line">        response.setHeader(<span class="string">&quot;Access-Control-Allow-Methods&quot;</span>,<span class="string">&quot;GET,POST,PUT,DELETE,OPTIONS&quot;</span>);<span class="comment">//支持跨域的请求方式</span></span><br><span class="line">        response.setHeader(<span class="string">&quot;Access-Control-Allow-Headers&quot;</span>,<span class="string">&quot;content-type,votertoken&quot;</span>);<span class="comment">// 允许跨域的请求消息头</span></span><br><span class="line">        response.setHeader(<span class="string">&quot;Access-Control-Max-Age&quot;</span>,<span class="string">&quot;3600&quot;</span>);</span><br><span class="line">        filterChain.doFilter(servletRequest,response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>Controller</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ApiOperation(value = &quot;用户头像上传&quot;)</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;picUpload.do&quot;)</span></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 多个参数时，MultipartFile必须使用<span class="doctag">@RequestPart</span>注解，不可使用RequestParm注解</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> R <span class="title">picUpload</span><span class="params">(<span class="meta">@RequestPart</span> MultipartFile file, HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">       </span><br><span class="line">    <span class="comment">//查看上传的文件大小</span></span><br><span class="line">       <span class="keyword">long</span> size = file.getSize();</span><br><span class="line">       System.out.println(size);</span><br><span class="line">    <span class="comment">//利用request获取设置在请求头中的token</span></span><br><span class="line">       String token = request.getHeader(SystemConstant.TOKEN_HEADER);</span><br><span class="line">       <span class="comment">// System.out.println(&quot;消费者：&quot;+token);</span></span><br><span class="line">       <span class="keyword">return</span> userService.picUpload(file, token);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>Service</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@FeignClient(&quot;yingyanuser&quot;)</span><span class="comment">//绑定提供者的注册中心</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * MultipartFile必须使用<span class="doctag">@RequestPart</span>注解，并给value值设定为file</span></span><br><span class="line"><span class="comment">    * 使用Feign进行文件上传，必须设置媒体类型为MediaType.MULTIPART_FORM_DATA_VALUE    </span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="meta">@PostMapping(value = &quot;api/user/picUpload.do&quot;,produces = &#123;MediaType.APPLICATION_JSON_UTF8_VALUE&#125;,consumes = MediaType.MULTIPART_FORM_DATA_VALUE)</span></span><br><span class="line">    </span><br><span class="line">    <span class="function">R <span class="title">picUpload</span><span class="params">(<span class="meta">@RequestPart</span> (value = <span class="string">&quot;file&quot;</span>)</span> MultipartFile file, @RequestParam String token)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>然后先启动提供者服务再启动消费者服务，就可以通过访问消费者接口来调用提供者服务，进而实现文件上传。</p>
]]></content>
  </entry>
  <entry>
    <title>个人博客搭建</title>
    <url>/2020/08/11/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="个人博客搭建"><a href="#个人博客搭建" class="headerlink" title="个人博客搭建"></a>个人博客搭建</h1><a id="more"></a>

<h3 id="一、基本准备"><a href="#一、基本准备" class="headerlink" title="一、基本准备"></a>一、基本准备</h3><h4 id="1-1-Github账号"><a href="#1-1-Github账号" class="headerlink" title="1.1 Github账号"></a>1.1 Github账号</h4><blockquote>
<ul>
<li><p>官网：<a href="https://github.com/">https://github.com/</a></p>
</li>
<li><p>全球最大的代码托管/分享平台，全球可访问，纯英文，免费</p>
</li>
<li><p>免费注册账号 1 个</p>
</li>
</ul>
</blockquote>
<h4 id="1-2-GitBash"><a href="#1-2-GitBash" class="headerlink" title="1.2 GitBash"></a>1.2 GitBash</h4><blockquote>
<ul>
<li>官网：<a href="https://gitforwindows.org/">https://gitforwindows.org/</a></li>
<li>Windows平台的代码版本管理工具</li>
<li>下载，安装(无脑下一步)</li>
</ul>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200421212955598.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzM2MTg0MDc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://yankang.oss-cn-beijing.aliyuncs.com/imgs/image-20200812104602132.png" alt="image-20200812104602132"></p>
<p><img src="https://yankang.oss-cn-beijing.aliyuncs.com/imgs/image-20200812104622298.png" alt="image-20200812104622298"></p>
<p>剩下的，一路默认就行（安装路径根据自己需要更改）。</p>
<h4 id="1-3-GitHub-Desktop"><a href="#1-3-GitHub-Desktop" class="headerlink" title="1.3 GitHub Desktop"></a>1.3 GitHub Desktop</h4><blockquote>
<ul>
<li>官网：<a href="https://desktop.github.com/">https://desktop.github.com/</a></li>
<li>GitHub 的桌面版，为部署到 github.io 公网路径时使用。</li>
<li>下载，安装(无脑下一步)</li>
</ul>
</blockquote>
<p><img src="https://yankang.oss-cn-beijing.aliyuncs.com/imgs/image-20200812105316836.png" alt="image-20200812105316836"></p>
<h4 id="1-4-Node-js"><a href="#1-4-Node-js" class="headerlink" title="1.4 Node.js"></a>1.4 Node.js</h4><blockquote>
<ul>
<li>官网：<a href="https://nodejs.org/zh-cn/">https://nodejs.org/zh-cn/</a></li>
<li>Node.js 是一个基于Chrome JavaScript 运行时建立的一个平台，用的是它集成的包管理工具 npm。</li>
<li>下载，安装(无脑下一步)</li>
</ul>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200421213512545.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzM2MTg0MDc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>一路默认就行（安装路径根据自己需要更改）。</p>
<h3 id="二、Hexo准备工作"><a href="#二、Hexo准备工作" class="headerlink" title="二、Hexo准备工作"></a>二、Hexo准备工作</h3><h4 id="2-1-Hexo-下载安装"><a href="#2-1-Hexo-下载安装" class="headerlink" title="2.1 Hexo 下载安装"></a>2.1 Hexo 下载安装</h4><p>① 在任意位置点击鼠标右键，选择Git Bash</p>
<p><img src="https://img-blog.csdnimg.cn/20200421214056510.png" alt="在这里插入图片描述"></p>
<p>② 安装Hexo命令：<code>npm install -g hexo</code></p>
<p><img src="https://img-blog.csdnimg.cn/2020042121420960.png" alt="在这里插入图片描述"></p>
<h4 id="2-2-Hexo-初始化配置"><a href="#2-2-Hexo-初始化配置" class="headerlink" title="2.2 Hexo 初始化配置"></a>2.2 Hexo 初始化配置</h4><ol>
<li><p>创建文件夹（我的是在D盘创建的Hexo）</p>
<p><img src="https://img-blog.csdnimg.cn/20200421214322325.png" alt="在这里插入图片描述"></p>
</li>
<li><p>在Hexo文件下，右键运行Git Bash，输入命令：<code>hexo init</code></p>
</li>
</ol>
<p><img src="https://img-blog.csdnimg.cn/20200421214352172.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzM2MTg0MDc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ol start="3">
<li>在<code>_config.yml</code>,进行基础配置</li>
</ol>
<p><img src="https://img-blog.csdnimg.cn/20200421214553612.png" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20200421214608786.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzM2MTg0MDc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ol start="3">
<li>主题选择（博客整体外观哦）</li>
</ol>
<blockquote>
<p>Hexo的主题分享页：<a href="https://hexo.io/themes/">https://hexo.io/themes/</a><br>该页面里点击图片是预览，点击主题的名字则是进入git中，获取其git主题路径，然后在Hexo文件夹下使用 Git Bash。<br>输入命令(注意空格)：<code>git clone 主题的git链接 themes/目录名</code><br>eg: <strong>git clone <a href="https://github.com/wujun234/hexo-theme-tree.git">https://github.com/wujun234/hexo-theme-tree.git</a> themes/tree</strong></p>
<p><a href="">注意：themes后面的文件夹名称要跟主题名称一致，然后在博客文件夹(GitHub账号.github.io)下的<code>_config.yml</code>文件中进行主题配置</a></p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200421220145611.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzM2MTg0MDc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20200421214736505.png" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20200421214832967.png" alt="在这里插入图片描述"></p>
<p><img src="https://yankang.oss-cn-beijing.aliyuncs.com/imgs/image-20200812215818930.png" alt="image-20200812215818930"></p>
<h3 id="三、博客更新、预览、部署-外网访问"><a href="#三、博客更新、预览、部署-外网访问" class="headerlink" title="三、博客更新、预览、部署(外网访问)"></a>三、博客更新、预览、部署(外网访问)</h3><h4 id="3-1-文章更新"><a href="#3-1-文章更新" class="headerlink" title="3.1 文章更新"></a>3.1 文章更新</h4><p>在 <code>磁盘:\Hexo\source\_posts</code>文件下，新建.md文件就可以以 markdown 格式写文章。<br>.md格式，即 markdown 格式的文本，</p>
<p><img src="https://img-blog.csdnimg.cn/20200421215001116.png" alt="在这里插入图片描述"></p>
<h4 id="3-2-博客本地浏览方式"><a href="#3-2-博客本地浏览方式" class="headerlink" title="3.2 博客本地浏览方式"></a>3.2 博客本地浏览方式</h4><p>① Git Bash 输入命令：<code>hexo g &amp;&amp; hexo s</code></p>
<p><img src="https://img-blog.csdnimg.cn/20200421215039349.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzM2MTg0MDc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>② 在浏览器输入：<code>http://localhost:4000</code> ，就可以进行访问</p>
<p><img src="https://img-blog.csdnimg.cn/20200421215146873.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzM2MTg0MDc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h4 id="3-3-博客部署到-GitHub-上"><a href="#3-3-博客部署到-GitHub-上" class="headerlink" title="3.3 博客部署到 GitHub 上"></a>3.3 博客部署到 GitHub 上</h4><p>① 登陆 github 账号，<code>new repository</code>创建仓库、获取同名的<code>https 仓库源地址</code>：</p>
<p><img src="https://img-blog.csdnimg.cn/20200421171618433.png" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20200421172106569.png" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20200421172245529.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzM2MTg0MDc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>② 在博客文件夹(GitHub账号.github.io)下的<code>_config.yml</code> 进行配置：</p>
<p><img src="https://img-blog.csdnimg.cn/20200421171729148.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzM2MTg0MDc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>③ 安装 hexo-deployer-git 自动部署发布工具</p>
<p>安装命令(注意路径)：<code>npm install hexo-deployer-git --save</code></p>
<p><img src="https://img-blog.csdnimg.cn/2020042117181819.png" alt="在这里插入图片描述"></p>
<p>④ 一键发布到 GitHub：</p>
<p>发布命令(注意路径)：<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code><br>第一次发布会需要填入 github 账号密码，正确填入即可。</p>
<p><img src="https://img-blog.csdnimg.cn/20200421171915701.png" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20200421171928437.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzM2MTg0MDc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>⑤ 测试访问：<br>在浏览器输入：<a href="https://janycode.github.io/">https://janycode.github.io/</a></p>
<h4 id="3-4-更新-Git部署"><a href="#3-4-更新-Git部署" class="headerlink" title="3.4 更新 + Git部署"></a>3.4 更新 + Git部署</h4><p>常规日常更新操作四步走：<br>① 文章更新到固定路径下<br><code>磁盘:\Hexo\source\_posts\文章名称.md</code><br>② 进入 Hexo 目录<br><code>cd D:\Hexo</code><br>③ 本地部署，并浏览查看，确认无误<br><code>hexo g &amp;&amp; hexo s</code><br>④ 远程部署，push到git仓库，即可浏览 xxx.github.io 正式博客确认是否更新。<br><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code></p>
<p>所有涉及到的命令统一使用右键里的 <code>Git Bash</code>，规避各种神坑。</p>
<p><img src="https://img-blog.csdnimg.cn/20200422004618401.png#pic_center" alt="在这里插入图片描述"></p>
<h3 id="四、-遇到的问题-amp-解决方案"><a href="#四、-遇到的问题-amp-解决方案" class="headerlink" title="四、 遇到的问题 &amp; 解决方案"></a>四、 遇到的问题 &amp; 解决方案</h3><h4 id="4-1-config-yml-中文乱码问题"><a href="#4-1-config-yml-中文乱码问题" class="headerlink" title="4.1 _config.yml 中文乱码问题"></a>4.1 _config.yml 中文乱码问题</h4><p>_config.yml 配置(我只改了这一部分，用记事本修改好像会出问题。<br>在 localhost:4000 上运行,标题和副标题都出现乱码。<br><img src="https://img-blog.csdnimg.cn/20200421233209511.png" alt="在这里插入图片描述"><br>为什么设置了zh-CN还会乱码呢？<br>解决方案：<br>1.不要用记事本打开，因为记事本不会utf8转码，<code>用sublime text编辑</code>。<br>2.或者用记事本打开另保存为utf-8编码</p>
<h4 id="4-2-Push到git仓库时报错-fatal-HttpRequestException-encountered"><a href="#4-2-Push到git仓库时报错-fatal-HttpRequestException-encountered" class="headerlink" title="4.2 Push到git仓库时报错 fatal: HttpRequestException encountered"></a>4.2 Push到git仓库时报错 fatal: HttpRequestException encountered</h4><p>无论是push前先将远程仓库pull到本地仓库，还是强制push都会弹出这个问题。<br>网上查了一下发现是Github 禁用了TLS v1.0 and v1.1，必须更新Windows的git凭证管理器，才行。<br><a href="https://github.com/Microsoft/Git-Credential-Manager-for-Windows/releases/tag/v1.14.0">https://github.com/Microsoft/Git-Credential-Manager-for-Windows/releases/tag/v1.14.0</a><br>点击下载安装 <code>GCMW-1.14.0.exe</code> ，测试远程push还是不行，灵机一动，万能的重启电脑，问题就解决了。ORZ…<br>此处切记一点，更新到远程git仓库时<code>使用 Git Bash 的命令行操作</code>。</p>
<p><img src="https://img-blog.csdnimg.cn/20200422004251889.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzM2MTg0MDc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h4 id="4-3-每次部署到远程-github-总是需要输入账号密码"><a href="#4-3-每次部署到远程-github-总是需要输入账号密码" class="headerlink" title="4.3 每次部署到远程 github 总是需要输入账号密码"></a>4.3 每次部署到远程 github 总是需要输入账号密码</h4><p><img src="https://img-blog.csdnimg.cn/2020042200525939.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzM2MTg0MDc1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>解决方案：<br><strong>配置SSH key</strong><br>1、 在任意文件夹下，右键git bash，配置生成公钥</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">cd ~/.ssh</span><br><span class="line">git config --global user.name <span class="string">&quot;yourname&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;youremail&quot;</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;youremail&quot;</span>（后三个空格即可，也可以根据提示输入）</span><br></pre></td></tr></table></figure>

<p>2、这时候.ssh下将出现两个文件id_rsa和id_rsa.pub，<code>id_rsa.pub是公钥</code>，打开<code>复制里面的内容</code>；<br>3、在github中的 yourname.github.io 仓库下的 setting 下的 deploy ssh 下添加 key,将上述内容复制即可，title任意；<br>4、测试</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>

<p>输入 yes，出现如下信息则正常：<br>Hi username! You’ve successfully authenticated, but GitHub does not provide shell access.<br>后续再使用 远程部署 命令则会自动登录，无需输入账号密码。</p>
<h4 id="4-4-YAMLException-end-of-the-stream-or-a-document-separator-is-expected-at"><a href="#4-4-YAMLException-end-of-the-stream-or-a-document-separator-is-expected-at" class="headerlink" title="4.4 YAMLException: end of the stream or a document separator is expected at"></a>4.4 YAMLException: end of the stream or a document separator is expected at</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">YAMLException: end of the stream or a document separator is expected at line 26, column 1:</span><br></pre></td></tr></table></figure>

<p>检查所有出现 “———“ 的地方。<br>作横线的 “———-” 后面<code>少了一个空格的原因</code>,改成”———- “就好了，如果有类似报错，也请先检查空格。</p>
<h4 id="4-5-生成和设置分类-amp-标签"><a href="#4-5-生成和设置分类-amp-标签" class="headerlink" title="4.5 生成和设置分类&amp;标签"></a>4.5 生成和设置分类&amp;标签</h4><p>● 添加标签页面</p>
<p>① <code>hexo new page tags</code><br>② 确认站点配置文件里有 tag_dir: tags<br>③ 确认主题配置文件里有 tags: /tags<br>④ 编辑站点的 source/tags/index.md 顶部 Front Matter</p>
<p>● 添加分类页面</p>
<p>① <code>hexo new page categories</code><br>② 确认站点配置文件里有 category_dir: categories<br>③ 确认主题配置文件里有 categories: /categories<br>④ 编辑站点的 source/categories/index.md 顶部 Front Matter</p>
<p>● 文章顶部标签</p>
<p>Typora软件中【段落】-【YAML Front Matter】生成顶部标识。</p>
<p>在两个 — 之间，<code>冒号后面要有空格</code>。<br>要使用命令添加 tags 和 categories 页面；且主题的配置文件和站点的配置文件 tags 和 categories 的注释要打开</p>
<p>文章顶部标识：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: 标题</span><br><span class="line">categories: </span><br><span class="line">- 一级分类</span><br><span class="line">- 二级分类</span><br><span class="line">tags:</span><br><span class="line">- 关键词1</span><br><span class="line">- 关键词2</span><br></pre></td></tr></table></figure>

<h3 id="五、技巧："><a href="#五、技巧：" class="headerlink" title="五、技巧："></a>五、技巧：</h3><p>每个人的博客可能会有不同，我的博客开启评论和标题的操作是：</p>
<h4 id="1-启用本主题："><a href="#1-启用本主题：" class="headerlink" title="1.启用本主题："></a>1.启用本主题：</h4><p>更改站点设置文件<code>_config.yml</code>:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">theme: lx</span><br></pre></td></tr></table></figure>

<p>主题的配置将在<code>themes/lx/_config.yml</code>中进行。</p>
<h4 id="2-统计"><a href="#2-统计" class="headerlink" title="2.统计"></a>2.统计</h4><p>引入了百度统计和谷歌统计。</p>
<p>启用：在<code>themes/lx/_config.yml</code>填写:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">google_analytics: ... ##谷歌统计ID</span><br><span class="line">baidu_analytics: ... ##百度统计ID</span><br></pre></td></tr></table></figure>

<h4 id="3-本地搜索"><a href="#3-本地搜索" class="headerlink" title="3.本地搜索"></a>3.本地搜索</h4><p>先下载插件<code>hexo-generator-searchdb</code>:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-generator-searchdb -s</span><br></pre></td></tr></table></figure>

<p>在<code>themes/lx/_config.yml</code>中配置:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure>

<h4 id="4-评论"><a href="#4-评论" class="headerlink" title="4.评论"></a>4.评论</h4><p>评论使用valine，官网：<a href="https://valine.js.org/">https://valine.js.org</a></p>
<p>启用：在<code>themes/lx/_config.yml</code>填写:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">comment:</span><br><span class="line">  enable: true # true:启用 | false:停用</span><br><span class="line">  appid: ... #leancloud appid</span><br><span class="line">  appkey: ... #leancloud appkey</span><br><span class="line">  notify: false</span><br><span class="line">  verify: false</span><br><span class="line">  placeholder: 此处留言 #评论框文字</span><br><span class="line">  avatar: identicon #游客默认头像</span><br><span class="line">  guest_info: nick,mail,link #评论时需填写的内容（均为选填）</span><br><span class="line">  pageSize: 10 #一次性展示的评论数</span><br><span class="line">  language: zh-cn</span><br></pre></td></tr></table></figure>

<p>在文章头填入<code>comment: true</code>即可在该页面启用评论:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">date: ...</span><br><span class="line">title: ...</span><br><span class="line">categories: ...</span><br><span class="line">tags: ...</span><br><span class="line">comment: true &#x2F;&#x2F;启用评论</span><br><span class="line">mathjax: ...</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p><code>appid</code>和<code>appkey</code>在leancloud创建应用后即可获取。</p>
<h4 id="5-社交媒体"><a href="#5-社交媒体" class="headerlink" title="5.社交媒体"></a>5.社交媒体</h4><p>社交媒体链接，在<code>themes/lx/_config.yml</code>配置:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">social:</span><br><span class="line">  enable: true</span><br><span class="line">  links:</span><br><span class="line">    Github:</span><br><span class="line">      icon: gihub &#x2F;&#x2F;font-awesmome图标名称</span><br><span class="line">      link: ... &#x2F;&#x2F;链接地址</span><br></pre></td></tr></table></figure>

<h4 id="6-字体设置"><a href="#6-字体设置" class="headerlink" title="6.字体设置"></a>6.字体设置</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">font:</span><br><span class="line">  enable: true</span><br><span class="line">  host: &#x2F;&#x2F;fonts.googleapis.com</span><br><span class="line">  codes: ##代码字体</span><br><span class="line">    enable: true</span><br><span class="line">    family: Fira Code</span><br><span class="line">  else: ##文字字体</span><br><span class="line">    enable: false</span><br><span class="line">    family: </span><br></pre></td></tr></table></figure>

<h2 id="文章写作样式"><a href="#文章写作样式" class="headerlink" title="文章写作样式"></a>文章写作样式</h2><h3 id="文章摘要"><a href="#文章摘要" class="headerlink" title="文章摘要"></a>文章摘要</h3><p>在<code>&lt;!--more--&gt;</code>标签之前的内容将作为文章摘要在首页展示。</p>
<h3 id="Note-tag"><a href="#Note-tag" class="headerlink" title="Note tag"></a>Note tag</h3><p>可选用<code>default</code>、<code>info</code>、<code>primary</code>、<code>success</code>、<code>warning</code>、<code>danger</code>。</p>
<p>示例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;%note default%&#125;</span><br><span class="line">### title</span><br><span class="line">content</span><br><span class="line">&#123;%endnote%&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Label-tag"><a href="#Label-tag" class="headerlink" title="Label tag"></a>Label tag</h3><p>可选用<code>default</code>、<code>info</code>、<code>primary</code>、<code>success</code>、<code>warning</code>、<code>danger</code>。</p>
<p>示例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;%label default@content%&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Button-tag"><a href="#Button-tag" class="headerlink" title="Button tag"></a>Button tag</h3><p>标准样式：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;%btn url,content,hand-o-right fa-fw,title%&#125;</span><br></pre></td></tr></table></figure>

<p>说明：</p>
<p><code>url</code>：指向的链接</p>
<p><code>content</code>：内容</p>
<p><code>hand-o-right fa-fw</code>：图标，可换成其他图标。<code>fa-fw</code>：fix width</p>
<p><code>title</code>：title</p>
<h3 id="center-quote-tag"><a href="#center-quote-tag" class="headerlink" title="center-quote tag"></a>center-quote tag</h3><p>示例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;%cq%&#125;</span><br><span class="line">人类的悲欢并不相通，我只觉得他们吵闹。&lt;br&gt;&lt;strong&gt;——鲁迅&lt;&#x2F;strong&gt;</span><br><span class="line">&#123;%endcq%&#125;</span><br></pre></td></tr></table></figure>

<h3 id="video-tag"><a href="#video-tag" class="headerlink" title="video tag"></a>video tag</h3><p>示例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% video url %&#125;</span><br></pre></td></tr></table></figure>

<p>说明：</p>
<p><code>url</code>：视频链接</p>
]]></content>
  </entry>
  <entry>
    <title>日志配置</title>
    <url>/2020/08/13/%E4%BD%BF%E7%94%A8logback%E8%AE%B0%E5%BD%95%E6%97%A5%E5%BF%97%E5%88%B0%E6%9C%AC%E5%9C%B0/</url>
    <content><![CDATA[<h1 id="日志配置"><a href="#日志配置" class="headerlink" title="日志配置"></a>日志配置</h1><a id="more"></a>

<h3 id="一、SpringBoot日志记录"><a href="#一、SpringBoot日志记录" class="headerlink" title="一、SpringBoot日志记录"></a>一、SpringBoot日志记录</h3><blockquote>
<p>SpringBoot 默认使用的日志是 <code>Logback</code>，官方建议日志文件命名为：<code>logback-spring.xml</code></p>
<p>在 resources 目录下创建 logback-spring.xml</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。</span></span><br><span class="line"><span class="comment">     默认的时间间隔为1分钟。 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- de<span class="doctag">bug:</span>当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>  <span class="attr">scan</span>=<span class="string">&quot;true&quot;</span> <span class="attr">scanPeriod</span>=<span class="string">&quot;60 seconds&quot;</span> <span class="attr">debug</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 存储位置任选其一 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 存储位置配置1：定义变量，可通过 $&#123;log.path&#125;和$&#123;CONSOLE_LOG_PATTERN&#125; 得到变量值 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;log.path&quot;</span> <span class="attr">value</span>=<span class="string">&quot;D:/log&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 存储位置配置2：当前的配置是在项目的目录中新建一个logs目录,在logs中创建具体的模块的日志目录 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;LOG_PATH&quot;</span> <span class="attr">value</span>=<span class="string">&quot;./logs/cache/&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;CONSOLE_LOG_PATTERN&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">value</span>=<span class="string">&quot;%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; |-[%-5p] in %logger.%M[line-%L] -%m%n&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 输出到控制台 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;CONSOLE&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.ConsoleAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Threshold=即最低日志级别，此appender输出大于等于对应级别的日志</span></span><br><span class="line"><span class="comment">             (当然还要满足root中定义的最低级别)</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.classic.filter.ThresholdFilter&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">level</span>&gt;</span>debug<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 日志格式(引用变量) --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Pattern</span>&gt;</span>$&#123;CONSOLE_LOG_PATTERN&#125;<span class="tag">&lt;/<span class="name">Pattern</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 设置字符集 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 追加到文件中 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;file1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.FileAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>$&#123;log.path&#125;/mylog1.log<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;CONSOLE_LOG_PATTERN&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 滚动追加到文件中 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;file2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 正在记录的日志文件的路径及文件名 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>$&#123;log.path&#125;/mylog2.log<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--日志文件输出格式--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;CONSOLE_LOG_PATTERN&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span> <span class="comment">&lt;!-- 设置字符集 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 日志记录器的滚动策略，按日期，按大小记录</span></span><br><span class="line"><span class="comment">             文件超过最大尺寸后，会新建文件，然后新的日志文件中继续写入</span></span><br><span class="line"><span class="comment">             如果日期变更，也会新建文件，然后在新的日志文件中写入当天日志</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 新建文件后，原日志改名为如下  %i=文件序号，从0开始 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span>$&#123;log.path&#125;/newlog-%d&#123;yyyy-MM-dd&#125;.%i.log<span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 每个日志文件的最大体量 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">timeBasedFileNamingAndTriggeringPolicy</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">maxFileSize</span>&gt;</span>1kb<span class="tag">&lt;/<span class="name">maxFileSize</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">timeBasedFileNamingAndTriggeringPolicy</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 日志文件保留天数，1=则只保留昨天的归档日志文件 ,不设置则保留所有日志--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>1<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">&quot;INFO&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;CONSOLE&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;file1&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;file2&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="二、基于-Maven，pom-xml-导包方便"><a href="#二、基于-Maven，pom-xml-导包方便" class="headerlink" title="二、基于 Maven，pom.xml 导包方便"></a>二、基于 Maven，pom.xml 导包方便</h3><h4 id="1-日志"><a href="#1-日志" class="headerlink" title="1. 日志"></a>1. 日志</h4><p>用于记录系统中发生的各种事件。记录位置常见的有：控制台、磁盘文件等…</p>
<p>日志级别（从低到高）：<code>TRACE</code>(堆栈), <code>DEBUG</code>(调试), <code>INFO</code>(普通), <code>WARN</code>(警告), <code>ERROR</code>(错误), <code>FATAL</code>(致命)</p>
<p>日志作用：</p>
<ul>
<li>通过日志观察、分析项目的运行情况——项目维护；</li>
<li>通过日志分析用户的使用情况——大数据分析；</li>
<li>…</li>
</ul>
<h4 id="2-方案1-log4j-commons-logging"><a href="#2-方案1-log4j-commons-logging" class="headerlink" title="2. 方案1: log4j+commons-logging"></a>2. 方案1: log4j+commons-logging</h4><p>log4j 官方教程(apache)：<a href="https://logging.apache.org/log4j/2.x/articles.html">https://logging.apache.org/log4j/2.x/articles.html</a></p>
<h5 id="2-1-导入依赖"><a href="#2-1-导入依赖" class="headerlink" title="2.1 导入依赖"></a>2.1 导入依赖</h5><p>pom.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h5 id="2-2-配置文件"><a href="#2-2-配置文件" class="headerlink" title="2.2 配置文件"></a>2.2 配置文件</h5><blockquote>
<p>log4j.xml (毋庸置疑 xml 速度比 properties 快。</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot;  encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">log4j</span>:configuration <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//LOGGER&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://org/apache/log4j/xml/log4j.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">log4j:configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- org.apache.log4j.ConsoleAppender 输出到控制台 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;myConsole&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.log4j.ConsoleAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--输出格式--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">layout</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.log4j.PatternLayout&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;ConversionPattern&quot;</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">value</span>=<span class="string">&quot;%-d&#123;yyyy-MM-dd HH:mm:ss,SSS&#125; [%c]-[%p] %m%n&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 输出到文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;myFile1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.log4j.RollingFileAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;File&quot;</span> <span class="attr">value</span>=<span class="string">&quot;e:/logTest/newLog1.log&quot;</span>/&gt;</span><span class="comment">&lt;!--文件位置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;Append&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span><span class="comment">&lt;!--是否选择追加--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;MaxFileSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1kb&quot;</span>/&gt;</span><span class="comment">&lt;!--文件最大字节数--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;MaxBackupIndex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> /&gt;</span><span class="comment">&lt;!--新文件数量--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">layout</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.log4j.PatternLayout&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;ConversionPattern&quot;</span> <span class="attr">value</span>=<span class="string">&quot;%-d&#123;yyyy-MM-dd HH:mm:ss,SSS&#125; [%c]-[%p] %m%n&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 输出到文件(每天生成一个新的日志文件) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;myFile2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.log4j.DailyRollingFileAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;File&quot;</span> <span class="attr">value</span>=<span class="string">&quot;e:/logTest/newLog2.log&quot;</span>/&gt;</span><span class="comment">&lt;!--文件位置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;Append&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span><span class="comment">&lt;!--是否选择追加--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">layout</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.log4j.PatternLayout&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;ConversionPattern&quot;</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">value</span>=<span class="string">&quot;%-d&#123;yyyy-MM-dd HH:mm:ss,SSS&#125; [%c]-[%p] %m%n&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 根logger的设置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--优先级设置，all &lt; trace &lt; debug &lt; info &lt; warn &lt; error &lt; fatal &lt; off --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">priority</span> <span class="attr">value</span>=<span class="string">&quot;debug&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;myConsole&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;myFile1&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;myFile2&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">log4j:configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h5 id="2-3-测试使用"><a href="#2-3-测试使用" class="headerlink" title="2.3 测试使用"></a>2.3 测试使用</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.logging.Log;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.logging.LogFactory;</span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestLog</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Log log;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        log = LogFactory.getLog(TestLog.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        log.trace(<span class="string">&quot;trace 堆栈信息&quot;</span>);</span><br><span class="line">        log.debug(<span class="string">&quot;debug 调试信息&quot;</span>);</span><br><span class="line">        log.info(<span class="string">&quot;info 普通信息&quot;</span>);</span><br><span class="line">        log.warn(<span class="string">&quot;warn 警告信息&quot;</span>);</span><br><span class="line">        log.error(<span class="string">&quot;error 错误信息&quot;</span>);</span><br><span class="line">        log.fatal(<span class="string">&quot;fatal 致命错误&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="2-4-log4j-格式化符号"><a href="#2-4-log4j-格式化符号" class="headerlink" title="2.4 log4j 格式化符号"></a>2.4 log4j 格式化符号</h5><p>格式化符号说明：</p>
<p><code>%p</code>：输出日志信息的优先级，即DEBUG，INFO，WARN，ERROR，FATAL。<br><code>%d</code>：输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，如：%d{yyyy/MM/dd HH:mm:ss,SSS}。<br><code>%r</code>：输出自应用程序启动到输出该log信息耗费的毫秒数。<br><code>%t</code>：输出产生该日志事件的线程名。<br><code>%l</code>：输出日志事件的发生位置，相当于%c.%M(%F:%L)的组合，包括类全名、方法、文件名以及在代码中的行数。例如：test.TestLog4j.main(TestLog4j.java:10)。<br><code>%c</code>：输出日志信息所属的类目，通常就是所在类的全名。<br><code>%M</code>：输出产生日志信息的方法名。<br><code>%F</code>：输出日志消息产生时所在的文件名称。<br><code>%L</code>：输出代码中的行号。<br><code>%m</code>：输出代码中指定的具体日志信息。<br><code>%n</code>：输出一个回车换行符，Windows平台为”rn”，Unix平台为”n”。<br><code>%x</code>：输出和当前线程相关联的NDC(嵌套诊断环境)，尤其用到像java servlets这样的多客户多线程的应用中。<br><code>%%</code>：输出一个”%”字符。<br>另外，还可以在%与格式字符之间加上修饰符来控制其最小长度、最大长度、和文本的对齐方式。如：</p>
<ol>
<li><code>c</code>：指定输出category的名称，最小的长度是20，如果category的名称长度小于20的话，默认的情况下右对齐。</li>
<li><code>%-20c</code>：”-“号表示左对齐。</li>
<li><code>%.30c</code>：指定输出category的名称，最大的长度是30，如果category的名称长度大于30的话，就会将左边多出的字符截掉，但小于30的话也不会补空格。</li>
</ol>
<h5 id="2-5-附：log4j-比较全面的配置"><a href="#2-5-附：log4j-比较全面的配置" class="headerlink" title="2.5 附：log4j 比较全面的配置"></a>2.5 附：log4j 比较全面的配置</h5><blockquote>
<p>Log4j配置文件实现了输出到控制台、文件、回滚文件、发送日志邮件、输出到数据库日志表、自定义标签等全套功能。</p>
<p>此处使用 log4j.properties 配置文件。</p>
</blockquote>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">log4j.rootLogger</span>=<span class="string">DEBUG,console,dailyFile,im</span></span><br><span class="line"><span class="meta">log4j.additivity.org.apache</span>=<span class="string">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 控制台(console)</span></span><br><span class="line"><span class="meta">log4j.appender.console</span>=<span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="meta">log4j.appender.console.Threshold</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.appender.console.ImmediateFlush</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">log4j.appender.console.Target</span>=<span class="string">System.err</span></span><br><span class="line"><span class="meta">log4j.appender.console.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.console.layout.ConversionPattern</span>=<span class="string">[%-5p] %d(%r) --&gt; [%t] %l: %m %x %n</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志文件(logFile)</span></span><br><span class="line"><span class="meta">log4j.appender.logFile</span>=<span class="string">org.apache.log4j.FileAppender</span></span><br><span class="line"><span class="meta">log4j.appender.logFile.Threshold</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.appender.logFile.ImmediateFlush</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">log4j.appender.logFile.Append</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">log4j.appender.logFile.File</span>=<span class="string">D:/logs/log.log4j</span></span><br><span class="line"><span class="meta">log4j.appender.logFile.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.logFile.layout.ConversionPattern</span>=<span class="string">[%-5p] %d(%r) --&gt; [%t] %l: %m %x %n</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 回滚文件(rollingFile)</span></span><br><span class="line"><span class="meta">log4j.appender.rollingFile</span>=<span class="string">org.apache.log4j.RollingFileAppender</span></span><br><span class="line"><span class="meta">log4j.appender.rollingFile.Threshold</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.appender.rollingFile.ImmediateFlush</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">log4j.appender.rollingFile.Append</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">log4j.appender.rollingFile.File</span>=<span class="string">D:/logs/log.log4j</span></span><br><span class="line"><span class="meta">log4j.appender.rollingFile.MaxFileSize</span>=<span class="string">200KB</span></span><br><span class="line"><span class="meta">log4j.appender.rollingFile.MaxBackupIndex</span>=<span class="string">50</span></span><br><span class="line"><span class="meta">log4j.appender.rollingFile.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.rollingFile.layout.ConversionPattern</span>=<span class="string">[%-5p] %d(%r) --&gt; [%t] %l: %m %x %n</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定期回滚日志文件(dailyFile)</span></span><br><span class="line"><span class="meta">log4j.appender.dailyFile</span>=<span class="string">org.apache.log4j.DailyRollingFileAppender</span></span><br><span class="line"><span class="meta">log4j.appender.dailyFile.Threshold</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.appender.dailyFile.ImmediateFlush</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">log4j.appender.dailyFile.Append</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">log4j.appender.dailyFile.File</span>=<span class="string">D:/logs/log.log4j</span></span><br><span class="line"><span class="meta">log4j.appender.dailyFile.DatePattern</span>=<span class="string">&#x27;.&#x27;yyyy-MM-dd</span></span><br><span class="line"><span class="meta">log4j.appender.dailyFile.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.dailyFile.layout.ConversionPattern</span>=<span class="string">[%-5p] %d(%r) --&gt; [%t] %l: %m %x %n</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 应用于socket</span></span><br><span class="line"><span class="meta">log4j.appender.socket</span>=<span class="string">org.apache.log4j.RollingFileAppender</span></span><br><span class="line"><span class="meta">log4j.appender.socket.RemoteHost</span>=<span class="string">localhost</span></span><br><span class="line"><span class="meta">log4j.appender.socket.Port</span>=<span class="string">5001</span></span><br><span class="line"><span class="meta">log4j.appender.socket.LocationInfo</span>=<span class="string">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set up for Log Factor 5</span></span><br><span class="line"><span class="meta">log4j.appender.socket.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.socket.layout.ConversionPattern</span>=<span class="string">[%-5p] %d(%r) --&gt; [%t] %l: %m %x %n</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Log Factor 5 Appender</span></span><br><span class="line"><span class="meta">log4j.appender.LF5_APPENDER</span>=<span class="string">org.apache.log4j.lf5.LF5Appender</span></span><br><span class="line"><span class="meta">log4j.appender.LF5_APPENDER.MaxNumberOfRecords</span>=<span class="string">2000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送日志到指定邮件</span></span><br><span class="line"><span class="meta">log4j.appender.mail</span>=<span class="string">org.apache.log4j.net.SMTPAppender</span></span><br><span class="line"><span class="meta">log4j.appender.mail.Threshold</span>=<span class="string">FATAL</span></span><br><span class="line"><span class="meta">log4j.appender.mail.BufferSize</span>=<span class="string">10</span></span><br><span class="line"><span class="meta">log4j.appender.mail.From</span> = <span class="string">xxx@mail.com</span></span><br><span class="line"><span class="meta">log4j.appender.mail.SMTPHost</span>=<span class="string">mail.com</span></span><br><span class="line"><span class="meta">log4j.appender.mail.Subject</span>=<span class="string">Log4J Message</span></span><br><span class="line"><span class="meta">log4j.appender.mail.To</span>= <span class="string">xxx@mail.com</span></span><br><span class="line"><span class="meta">log4j.appender.mail.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.mail.layout.ConversionPattern</span>=<span class="string">[%-5p] %d(%r) --&gt; [%t] %l: %m %x %n</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 应用于数据库</span></span><br><span class="line"><span class="meta">log4j.appender.database</span>=<span class="string">org.apache.log4j.jdbc.JDBCAppender</span></span><br><span class="line"><span class="meta">log4j.appender.database.URL</span>=<span class="string">jdbc:mysql://localhost:3306/test</span></span><br><span class="line"><span class="meta">log4j.appender.database.driver</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="meta">log4j.appender.database.user</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">log4j.appender.database.password</span>=<span class="string"></span></span><br><span class="line"><span class="meta">log4j.appender.database.sql</span>=<span class="string">INSERT INTO LOG4J (Message) VALUES(&#x27;=[%-5p] %d(%r) --&gt; [%t] %l: %m %x %n&#x27;)</span></span><br><span class="line"><span class="meta">log4j.appender.database.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.database.layout.ConversionPattern</span>=<span class="string">[%-5p] %d(%r) --&gt; [%t] %l: %m %x %n</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义Appender</span></span><br><span class="line"><span class="meta">log4j.appender.im</span> = <span class="string">net.cybercorlin.util.logger.appender.IMAppender</span></span><br><span class="line"><span class="meta">log4j.appender.im.host</span> = <span class="string">mail.cybercorlin.net</span></span><br><span class="line"><span class="meta">log4j.appender.im.username</span> = <span class="string">username</span></span><br><span class="line"><span class="meta">log4j.appender.im.password</span> = <span class="string">password</span></span><br><span class="line"><span class="meta">log4j.appender.im.recipient</span> = <span class="string">corlin@cybercorlin.net</span></span><br><span class="line"><span class="meta">log4j.appender.im.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.im.layout.ConversionPattern</span>=<span class="string">[%-5p] %d(%r) --&gt; [%t] %l: %m %x %n</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># struts log</span></span><br><span class="line"><span class="comment">#log4j.logger.org.apache.commons=ERROR</span></span><br><span class="line"><span class="comment">#log4j.logger.org.apache.struts=WARN</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Spring log</span></span><br><span class="line"><span class="comment">#log4j.logger.org.springframework=ERROR</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># hibernate log</span></span><br><span class="line"><span class="comment">#log4j.logger.org.hibernate.ps.PreparedStatementCache=WARN</span></span><br><span class="line"><span class="comment">#log4j.logger.org.hibernate=ERROR</span></span><br></pre></td></tr></table></figure>

<h3 id="三、-logback-SLF4j"><a href="#三、-logback-SLF4j" class="headerlink" title="三、 logback+SLF4j"></a>三、 logback+SLF4j</h3><blockquote>
<p>logback 官方使用手册(英文)：<a href="http://logback.qos.ch/manual/index.html">http://logback.qos.ch/manual/index.html</a></p>
</blockquote>
<h4 id="3-1-导入依赖"><a href="#3-1-导入依赖" class="headerlink" title="3.1 导入依赖"></a>3.1 导入依赖</h4><p>pom.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="3-2-配置文件"><a href="#3-2-配置文件" class="headerlink" title="3.2 配置文件"></a>3.2 配置文件</h4><p>logback.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。</span></span><br><span class="line"><span class="comment">     默认的时间间隔为1分钟。 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- de<span class="doctag">bug:</span>当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>  <span class="attr">scan</span>=<span class="string">&quot;true&quot;</span> <span class="attr">scanPeriod</span>=<span class="string">&quot;60 seconds&quot;</span> <span class="attr">debug</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 定义变量，可通过 $&#123;log.path&#125;和$&#123;CONSOLE_LOG_PATTERN&#125; 得到变量值 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;log.path&quot;</span> <span class="attr">value</span>=<span class="string">&quot;./log/project/&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;CONSOLE_LOG_PATTERN&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">value</span>=<span class="string">&quot;%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; |-[%-5p] in %logger.%M[line-%L] -%m%n&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 输出到控制台 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;CONSOLE&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.ConsoleAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Threshold=即最低日志级别，此appender输出大于等于对应级别的日志</span></span><br><span class="line"><span class="comment">             (当然还要满足root中定义的最低级别)</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.classic.filter.ThresholdFilter&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">level</span>&gt;</span>debug<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 日志格式(引用变量) --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Pattern</span>&gt;</span>$&#123;CONSOLE_LOG_PATTERN&#125;<span class="tag">&lt;/<span class="name">Pattern</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 设置字符集 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 追加到文件中 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;file1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.FileAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>$&#123;log.path&#125;/newLog1.log<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;CONSOLE_LOG_PATTERN&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 滚动追加到文件中 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;file2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 正在记录的日志文件的路径及文件名 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>$&#123;log.path&#125;/newLog2.log<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--日志文件输出格式--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;CONSOLE_LOG_PATTERN&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span> <span class="comment">&lt;!-- 设置字符集 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 日志记录器的滚动策略，按日期，按大小记录</span></span><br><span class="line"><span class="comment">             文件超过最大尺寸后，会新建文件，然后新的日志文件中继续写入</span></span><br><span class="line"><span class="comment">             如果日期变更，也会新建文件，然后在新的日志文件中写入当天日志</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 新建文件后，原日志改名为如下  %i=文件序号，从0开始 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span>$&#123;log.path&#125;/newLog-%d&#123;yyyy-MM-dd&#125;.%i.log<span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 每个日志文件的最大体量 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">timeBasedFileNamingAndTriggeringPolicy</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">maxFileSize</span>&gt;</span>1kb<span class="tag">&lt;/<span class="name">maxFileSize</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">timeBasedFileNamingAndTriggeringPolicy</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 日志文件保留天数，1=则只保留昨天的归档日志文件 ,不设置则保留所有日志--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>1<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">&quot;warn&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;CONSOLE&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;file1&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;file2&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="3-3-测试使用"><a href="#3-3-测试使用" class="headerlink" title="3.3 测试使用"></a>3.3 测试使用</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestLog</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Logger log;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        log = LoggerFactory.getLogger(TestLog.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        log.trace(<span class="string">&quot;trace 堆栈信息&quot;</span>);</span><br><span class="line">        log.debug(<span class="string">&quot;debug 调试信息&quot;</span>);</span><br><span class="line">        log.info(<span class="string">&quot;info 普通信息&quot;</span>);</span><br><span class="line">        log.warn(<span class="string">&quot;warn 警告信息&quot;</span>);</span><br><span class="line">        log.error(<span class="string">&quot;error 错误信息&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
</search>
